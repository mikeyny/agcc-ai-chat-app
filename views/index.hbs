<div class="container mx-auto px-4 py-8 max-w-2xl">
    <h1 class="text-3xl font-bold text-center mb-8">AI Chat App</h1>
    
    <!-- Chat history container -->
    <div id="chat-history" class="bg-white rounded-lg shadow-md p-4 mb-4 h-[500px] overflow-y-auto">
        {{#each messages}}
            <div class="mb-4">
                <!-- Check if the message is from the user -->
                {{#if (eq this.role "user")}}
                    <div class="flex items-start mb-2">
                        <div class="bg-blue-100 rounded-lg p-3 max-w-[80%]">
                            <p class="text-sm text-gray-800">{{this.content}}</p>
                        </div>
                    </div>
                {{else}}
                    <!-- Message from the assistant -->
                    <div class="flex items-start justify-end">
                        <div class="bg-green-100 rounded-lg p-3 max-w-[80%]">
                            <p class="text-sm text-gray-800">{{this.content}}</p>
                            <!-- Display timestamp if available -->
                            {{#if this.timestamp}}
                                <span class="text-xs text-gray-500">{{this.timestamp}}</span>
                            {{/if}}
                        </div>
                    </div>
                {{/if}}
            </div>
        {{/each}}
    </div>

    <!-- Chat input form -->
    <form id="chat-form" class="flex gap-2">
        <input 
            type="text" 
            id="message" 
            class="flex-1 p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400"
            placeholder="Type your message..."
            required
        >
        <button 
            type="submit"
            class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors"
        >
            Send
        </button>
    </form>
</div>

<script>
document.getElementById('chat-form').addEventListener('submit', async (e) => {
    e.preventDefault(); // Prevent form from submitting normally
    
    const messageInput = document.getElementById('message');
    const message = messageInput.value; // Get the message from input
    messageInput.value = ''; // Clear the input field

    const chatHistory = document.getElementById('chat-history');

    try {
        // Send the message to the server
        const response = await fetch('/chat', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ message }),
        });

        const data = await response.json();
        
        if (data.success) {
            // Extract user and AI messages from the response
            const userMessage = data.history[data.history.length - 2]; // Second to last message
            const aiMessage = data.history[data.history.length - 1]; // Last message

            // Construct HTML for the new messages
            const messageHtml = `
                <div class="mb-4">
                    <div class="flex items-start mb-2">
                        <div class="bg-blue-100 rounded-lg p-3 max-w-[80%]">
                            <p class="text-sm text-gray-800">${userMessage.content}</p>
                        </div>
                    </div>
                    <div class="flex items-start justify-end">
                        <div class="bg-green-100 rounded-lg p-3 max-w-[80%]">
                            <p class="text-sm text-gray-800">${aiMessage.content}</p>
                            ${aiMessage.timestamp ? `<span class="text-xs text-gray-500">${aiMessage.timestamp}</span>` : ''}
                        </div>
                    </div>
                </div>
            `;
            
            // Append the new messages to the chat history
            chatHistory.insertAdjacentHTML('beforeend', messageHtml);
            chatHistory.scrollTop = chatHistory.scrollHeight; // Scroll to the bottom
        } else {
            alert('Error: ' + data.error); // Alert if there's an error
        }
    } catch (error) {
        console.error('Error:', error); // Log any errors
        alert('Failed to send message'); // Alert if the message fails to send
    }
});
</script>